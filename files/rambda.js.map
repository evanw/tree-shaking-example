{"version":3,"file":"rambda.js","sources":["../../rambda/modules/compose.js","../../rambda/modules/filter.js","../../rambda/modules/range.js","../../rambda/rambda.js"],"sourcesContent":["//Taken from https://github.com/getify/Functional-Light-JS/blob/master/ch4.md\nexport default function compose (...fns) {\n  return result => {\n    const list = fns.slice()\n\n    while (list.length > 0) {\n      result = list.pop()(result)\n    }\n\n    return result\n  }\n}\n","// import curry from './internal/curry'\n\nfunction filterObject (fn, obj) {\n  const willReturn = {}\n  for (const prop in obj) {\n    if (fn(obj[ prop ])) {\n      willReturn[ prop ] = obj[ prop ]\n    }\n  }\n\n  return willReturn\n}\n\nfunction filter (fn, arr) {\n  if(arr === undefined){\n    return arrHolder => filter(fn, arrHolder)\n  }\n\n  if (arr.length === undefined) {\n    return filterObject(fn, arr)\n  }\n  let index = -1\n  let resIndex = 0\n  const len = arr.length\n  const willReturn = []\n\n  while (++index < len) {\n    const value = arr[ index ]\n    if (fn(value)) {\n      willReturn[ resIndex++ ] = value\n    }\n  }\n\n  return willReturn\n}\n\n// export default curry(filter)\nexport default filter\n","export default function range (start, end) {\n  const willReturn = []\n  for (let i = start; i < end; i++) {\n    willReturn.push(i)\n  }\n\n  return willReturn\n}\n","// export { default as add } from './modules/add'\n// export { default as addIndex } from './modules/addIndex'\n// export { default as adjust } from './modules/adjust'\n// export { default as all } from './modules/all'\n// export { default as allPass } from './modules/allPass'\n// export { default as anyPass } from './modules/anyPass'\n// export const always = x => () => x\n// export { default as any } from './modules/any'\n// export { default as append } from './modules/append'\n// export { default as both } from './modules/both'\n// export const complement = fn => input => !fn(input)\nexport { default as compose } from './modules/compose'\n// export { default as concat } from './modules/concat'\n// export { default as contains } from './modules/contains'\n// export { default as curry } from './modules/curry'\n// export { default as dec } from './modules/dec'\n// export { default as defaultTo } from './modules/defaultTo'\n// export { default as divide } from './modules/divide'\n// export { default as drop } from './modules/drop'\n// export { default as dropLast } from './modules/dropLast'\n// export { default as either } from './modules/either'\n// export { default as endsWith } from './modules/endsWith'\n// export { default as inc } from './modules/inc'\n// export { default as equals } from './modules/equals'\n// export const F = () => false\nexport { default as filter } from './modules/filter'\n// export { default as find } from './modules/find'\n// export { default as findIndex } from './modules/findIndex'\n// export { default as flatten } from './modules/flatten'\n// export { default as flip } from './modules/flip'\n// export { default as forEach } from './modules/forEach'\n// export { default as has } from './modules/has'\n// export { default as head } from './modules/head'\n// export const identity = x => x\n// export { default as ifElse } from './modules/ifElse'\n// export { default as isNil } from './modules/isNil'\n// export { default as includes } from './modules/includes'\n// export { default as indexOf } from './modules/indexOf'\n// export { default as init } from './modules/init'\n// export { default as join } from './modules/join'\n// export { default as lastIndexOf } from './modules/lastIndexOf'\n// export { default as last } from './modules/last'\n// export { default as length } from './modules/length'\n// export { default as map } from './modules/map'\n// export { default as match } from './modules/match'\n// export { default as merge } from './modules/merge'\n// export { default as modulo } from './modules/modulo'\n// export { default as multiply } from './modules/multiply'\n// export const not = x => !x\n// export { default as omit } from './modules/omit'\n// export { default as partialCurry } from './modules/partialCurry'\n// export { default as path } from './modules/path'\n// export { default as pathOr } from './modules/pathOr'\n// export { default as pick } from './modules/pick'\n// export { default as pipe } from './modules/pipe'\n// export { default as pluck } from './modules/pluck'\n// export { default as prepend } from './modules/prepend'\n// export { default as prop } from './modules/prop'\n// export { default as propEq } from './modules/propEq'\nexport { default as range } from './modules/range'\n// export { default as reduce } from './modules/reduce'\n// export { default as reject } from './modules/reject'\n// export { default as repeat } from './modules/repeat'\n// export { default as replace } from './modules/replace'\n// export { default as reverse } from './modules/reverse'\n// export { default as sort } from './modules/sort'\n// export { default as sortBy } from './modules/sortBy'\n// export { default as split } from './modules/split'\n// export { default as splitEvery } from './modules/splitEvery'\n// export { default as startsWith } from './modules/startsWith'\n// export { default as subtract } from './modules/subtract'\n// export const T = () => true\n// export { default as tap } from './modules/tap'\n// export { default as tail } from './modules/tail'\n// export { default as take } from './modules/take'\n// export { default as takeLast } from './modules/takeLast'\n// export { default as test } from './modules/test'\n// export { default as times } from './modules/times'\n// export { default as toLower } from './modules/toLower'\n// export { default as toUpper } from './modules/toUpper'\n// export { default as toString } from './modules/toString'\n// export const trim = x => x.trim()\n// export { default as type } from './modules/type'\n// export { default as typedPathOr } from './modules/typedPathOr'\n// export { default as typedDefaultTo } from './modules/typedDefaultTo'\n// export { default as uniq } from './modules/uniq'\n// export { default as update } from './modules/update'\n// export { default as values } from './modules/values'\n// export { default as without } from './modules/without'\n"],"names":["compose","fns","result","list","slice","length","pop","filterObject","fn","obj","willReturn","prop","filter","arr","undefined","arrHolder","index","resIndex","len","value","range","start","end","i","push"],"mappings":"AAAA;AACA,AAAe,SAASA,OAAT,CAAkB,GAAGC,GAArB,EAA0B;SAChCC,UAAU;UACTC,OAAOF,IAAIG,KAAJ,EAAb;;WAEOD,KAAKE,MAAL,GAAc,CAArB,EAAwB;eACbF,KAAKG,GAAL,GAAWJ,MAAX,CAAT;;;WAGKA,MAAP;GAPF;;;ACFF;;AAEA,SAASK,YAAT,CAAuBC,EAAvB,EAA2BC,GAA3B,EAAgC;QACxBC,aAAa,EAAnB;OACK,MAAMC,IAAX,IAAmBF,GAAnB,EAAwB;QAClBD,GAAGC,IAAKE,IAAL,CAAH,CAAJ,EAAqB;iBACPA,IAAZ,IAAqBF,IAAKE,IAAL,CAArB;;;;SAIGD,UAAP;;;AAGF,SAASE,MAAT,CAAiBJ,EAAjB,EAAqBK,GAArB,EAA0B;MACrBA,QAAQC,SAAX,EAAqB;WACZC,aAAaH,OAAOJ,EAAP,EAAWO,SAAX,CAApB;;;MAGEF,IAAIR,MAAJ,KAAeS,SAAnB,EAA8B;WACrBP,aAAaC,EAAb,EAAiBK,GAAjB,CAAP;;MAEEG,QAAQ,CAAC,CAAb;MACIC,WAAW,CAAf;QACMC,MAAML,IAAIR,MAAhB;QACMK,aAAa,EAAnB;;SAEO,EAAEM,KAAF,GAAUE,GAAjB,EAAsB;UACdC,QAAQN,IAAKG,KAAL,CAAd;QACIR,GAAGW,KAAH,CAAJ,EAAe;iBACDF,UAAZ,IAA2BE,KAA3B;;;;SAIGT,UAAP;;;ACjCa,SAASU,KAAT,CAAgBC,KAAhB,EAAuBC,GAAvB,EAA4B;QACnCZ,aAAa,EAAnB;OACK,IAAIa,IAAIF,KAAb,EAAoBE,IAAID,GAAxB,EAA6BC,GAA7B,EAAkC;eACrBC,IAAX,CAAgBD,CAAhB;;;SAGKb,UAAP;;;ACNF;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}