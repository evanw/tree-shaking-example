{"id":"bAOq","dependencies":[{"name":"/home/s/repos/tree-shaking-example/package.json","includedInParent":true,"mtime":1539681810771},{"name":"/home/s/repos/tree-shaking-example/node_modules/ramda/package.json","includedInParent":true,"mtime":1539525658998},{"name":"./curry","loc":{"line":1,"column":18},"parent":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/call.js","resolved":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/curry.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=r(require(\"./curry\"));function r(e){return e&&e.__esModule?e:{default:e}}var t=(0,e.default)(function(e){return e.apply(this,Array.prototype.slice.call(arguments,1))}),u=t;exports.default=u;","map":{"mappings":[{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":0}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":13}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":20}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":35}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":43}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":56}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":57}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":64}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":68}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":76}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":89}},{"source":"../node_modules/ramda/es/call.js","original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/ramda/es/call.js","original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/ramda/es/call.js","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"../node_modules/ramda/es/call.js","original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/ramda/es/call.js","original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":119}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":128}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":130}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":133}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":140}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":143}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":145}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":156}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":158}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":159}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":167}},{"source":"../node_modules/ramda/es/call.js","original":{"line":35,"column":0},"generated":{"line":1,"column":170}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":35,"column":4},"generated":{"line":1,"column":174}},{"source":"../node_modules/ramda/es/call.js","original":{"line":35,"column":24},"generated":{"line":1,"column":177}},{"source":"../node_modules/ramda/es/call.js","original":{"line":35,"column":30},"generated":{"line":1,"column":179}},{"source":"../node_modules/ramda/es/call.js","original":{"line":35,"column":30},"generated":{"line":1,"column":181}},{"source":"../node_modules/ramda/es/call.js","original":{"line":35,"column":30},"generated":{"line":1,"column":190}},{"source":"../node_modules/ramda/es/call.js","name":"fn","original":{"line":35,"column":44},"generated":{"line":1,"column":199}},{"source":"../node_modules/ramda/es/call.js","name":"fn","original":{"line":36,"column":9},"generated":{"line":1,"column":202}},{"source":"../node_modules/ramda/es/call.js","name":"fn","original":{"line":36,"column":9},"generated":{"line":1,"column":209}},{"source":"../node_modules/ramda/es/call.js","name":"apply","original":{"line":36,"column":12},"generated":{"line":1,"column":211}},{"source":"../node_modules/ramda/es/call.js","original":{"line":36,"column":18},"generated":{"line":1,"column":217}},{"source":"../node_modules/ramda/es/call.js","name":"Array","original":{"line":36,"column":24},"generated":{"line":1,"column":222}},{"source":"../node_modules/ramda/es/call.js","name":"prototype","original":{"line":36,"column":30},"generated":{"line":1,"column":228}},{"source":"../node_modules/ramda/es/call.js","name":"slice","original":{"line":36,"column":40},"generated":{"line":1,"column":238}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":36,"column":46},"generated":{"line":1,"column":244}},{"source":"../node_modules/ramda/es/call.js","name":"arguments","original":{"line":36,"column":51},"generated":{"line":1,"column":249}},{"source":"../node_modules/ramda/es/call.js","original":{"line":36,"column":62},"generated":{"line":1,"column":259}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":265}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":267}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":269}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":277}},{"source":"../node_modules/ramda/es/call.js","name":"call","original":{"line":38,"column":15},"generated":{"line":1,"column":285}}],"sources":{"../node_modules/ramda/es/call.js":"import curry from './curry';\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;"},"lineCount":null}},"hash":"ed5cfc0ee9a1738daea2cbbd1e4d09a1","cacheData":{"env":{}}}