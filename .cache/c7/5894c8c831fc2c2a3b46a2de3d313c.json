{"id":"C4EZ","dependencies":[{"name":"/home/s/repos/tree-shaking-example/package.json","includedInParent":true,"mtime":1539681810771},{"name":"/home/s/repos/tree-shaking-example/node_modules/ramda/package.json","includedInParent":true,"mtime":1539525658998},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/equals.js","resolved":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/internal/_curry2.js"},{"name":"./internal/_equals","loc":{"line":2,"column":20},"parent":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/equals.js","resolved":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/internal/_equals.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=t(require(\"./internal/_curry2\")),r=t(require(\"./internal/_equals\"));function t(e){return e&&e.__esModule?e:{default:e}}var u=(0,e.default)(function(e,t){return(0,r.default)(e,t,[],[])}),a=u;exports.default=a;","map":{"mappings":[{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":0}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":13}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":20}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":35}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":43}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":56}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":57}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":64}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":68}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":76}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":89}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":2,"column":0},"generated":{"line":1,"column":130}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":2,"column":0},"generated":{"line":1,"column":132}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":2,"column":0},"generated":{"line":1,"column":134}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":2,"column":0},"generated":{"line":1,"column":142}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":165}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":174}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":176}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":179}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":186}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":189}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":191}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":202}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":204}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":205}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":213}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":29,"column":0},"generated":{"line":1,"column":216}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":29,"column":4},"generated":{"line":1,"column":220}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":29,"column":26},"generated":{"line":1,"column":223}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":29,"column":34},"generated":{"line":1,"column":225}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":29,"column":34},"generated":{"line":1,"column":227}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":29,"column":34},"generated":{"line":1,"column":236}},{"source":"../node_modules/ramda/es/equals.js","name":"a","original":{"line":29,"column":50},"generated":{"line":1,"column":245}},{"source":"../node_modules/ramda/es/equals.js","name":"b","original":{"line":29,"column":53},"generated":{"line":1,"column":247}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":30,"column":9},"generated":{"line":1,"column":250}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":30,"column":9},"generated":{"line":1,"column":257}},{"source":"../node_modules/ramda/es/equals.js","name":"a","original":{"line":30,"column":17},"generated":{"line":1,"column":259}},{"source":"../node_modules/ramda/es/equals.js","name":"a","original":{"line":30,"column":17},"generated":{"line":1,"column":261}},{"source":"../node_modules/ramda/es/equals.js","name":"a","original":{"line":30,"column":17},"generated":{"line":1,"column":270}},{"source":"../node_modules/ramda/es/equals.js","name":"b","original":{"line":30,"column":20},"generated":{"line":1,"column":272}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":30,"column":23},"generated":{"line":1,"column":274}},{"source":"../node_modules/ramda/es/equals.js","original":{"line":30,"column":27},"generated":{"line":1,"column":277}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":283}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":285}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":287}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":295}},{"source":"../node_modules/ramda/es/equals.js","name":"equals","original":{"line":32,"column":15},"generated":{"line":1,"column":303}}],"sources":{"../node_modules/ramda/es/equals.js":"import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;"},"lineCount":null}},"hash":"69906ba689b1965093e902549bdbe995","cacheData":{"env":{}}}