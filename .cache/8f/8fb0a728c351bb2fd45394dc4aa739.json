{"id":"cb27","dependencies":[{"name":"/home/s/repos/tree-shaking-example/package.json","includedInParent":true,"mtime":1539681810771},{"name":"/home/s/repos/tree-shaking-example/node_modules/ramda/package.json","includedInParent":true,"mtime":1539525658998},{"name":"./internal/_curry3","loc":{"line":1,"column":20},"parent":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/mergeWithKey.js","resolved":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/internal/_curry3.js"},{"name":"./internal/_has","loc":{"line":2,"column":17},"parent":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/mergeWithKey.js","resolved":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/internal/_has.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=t(require(\"./internal/_curry3\")),r=t(require(\"./internal/_has\"));function t(e){return e&&e.__esModule?e:{default:e}}var u=(0,e.default)(function(e,t,u){var a,f={};for(a in t)(0,r.default)(a,t)&&(f[a]=(0,r.default)(a,u)?e(a,t[a],u[a]):t[a]);for(a in u)(0,r.default)(a,u)&&!(0,r.default)(a,f)&&(f[a]=u[a]);return f}),a=u;exports.default=a;","map":{"mappings":[{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":0}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":13}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":20}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":35}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":43}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":56}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":57}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":64}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":68}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":76}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":89}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":2,"column":0},"generated":{"line":1,"column":130}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":2,"column":0},"generated":{"line":1,"column":132}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":2,"column":0},"generated":{"line":1,"column":134}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":2,"column":0},"generated":{"line":1,"column":142}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":162}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":171}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":173}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":176}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":183}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":186}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":188}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":199}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":201}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":202}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":210}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":0},"generated":{"line":1,"column":213}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":29,"column":4},"generated":{"line":1,"column":217}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":32},"generated":{"line":1,"column":220}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":40},"generated":{"line":1,"column":222}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":40},"generated":{"line":1,"column":224}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":40},"generated":{"line":1,"column":233}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"fn","original":{"line":29,"column":62},"generated":{"line":1,"column":242}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"l","original":{"line":29,"column":66},"generated":{"line":1,"column":244}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"r","original":{"line":29,"column":69},"generated":{"line":1,"column":246}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"result","original":{"line":30,"column":6},"generated":{"line":1,"column":249}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":31,"column":6},"generated":{"line":1,"column":253}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"result","original":{"line":30,"column":6},"generated":{"line":1,"column":255}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":30,"column":15},"generated":{"line":1,"column":257}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":33,"column":7},"generated":{"line":1,"column":260}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":33,"column":7},"generated":{"line":1,"column":264}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"l","original":{"line":33,"column":12},"generated":{"line":1,"column":269}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":34,"column":8},"generated":{"line":1,"column":272}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":34,"column":13},"generated":{"line":1,"column":274}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":34,"column":13},"generated":{"line":1,"column":276}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":34,"column":13},"generated":{"line":1,"column":285}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"l","original":{"line":34,"column":16},"generated":{"line":1,"column":287}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"result","original":{"line":35,"column":6},"generated":{"line":1,"column":292}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":35,"column":13},"generated":{"line":1,"column":294}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":18},"generated":{"line":1,"column":298}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":35,"column":23},"generated":{"line":1,"column":300}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":35,"column":23},"generated":{"line":1,"column":302}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":35,"column":23},"generated":{"line":1,"column":311}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"r","original":{"line":35,"column":26},"generated":{"line":1,"column":313}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"fn","original":{"line":35,"column":31},"generated":{"line":1,"column":316}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":35,"column":34},"generated":{"line":1,"column":318}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"l","original":{"line":35,"column":37},"generated":{"line":1,"column":320}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":35,"column":39},"generated":{"line":1,"column":322}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"r","original":{"line":35,"column":43},"generated":{"line":1,"column":325}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":35,"column":45},"generated":{"line":1,"column":327}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"l","original":{"line":35,"column":51},"generated":{"line":1,"column":331}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":35,"column":53},"generated":{"line":1,"column":333}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":39,"column":7},"generated":{"line":1,"column":337}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":39,"column":7},"generated":{"line":1,"column":341}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"r","original":{"line":39,"column":12},"generated":{"line":1,"column":346}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":8},"generated":{"line":1,"column":349}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":40,"column":13},"generated":{"line":1,"column":351}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":40,"column":13},"generated":{"line":1,"column":353}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":40,"column":13},"generated":{"line":1,"column":362}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"r","original":{"line":40,"column":16},"generated":{"line":1,"column":364}},{"source":"../node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":23},"generated":{"line":1,"column":370}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":40,"column":28},"generated":{"line":1,"column":372}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":40,"column":28},"generated":{"line":1,"column":374}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":40,"column":28},"generated":{"line":1,"column":383}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"result","original":{"line":40,"column":31},"generated":{"line":1,"column":385}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"result","original":{"line":41,"column":6},"generated":{"line":1,"column":390}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":41,"column":13},"generated":{"line":1,"column":392}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"r","original":{"line":41,"column":18},"generated":{"line":1,"column":395}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"k","original":{"line":41,"column":20},"generated":{"line":1,"column":397}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"result","original":{"line":45,"column":9},"generated":{"line":1,"column":401}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"result","original":{"line":45,"column":9},"generated":{"line":1,"column":408}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":412}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":414}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":416}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":424}},{"source":"../node_modules/ramda/es/mergeWithKey.js","name":"mergeWithKey","original":{"line":47,"column":15},"generated":{"line":1,"column":432}}],"sources":{"../node_modules/ramda/es/mergeWithKey.js":"import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;"},"lineCount":null}},"hash":"c5e0f3b0151e4046bfd156f545a5b1df","cacheData":{"env":{}}}