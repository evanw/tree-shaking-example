{"id":"q8kM","dependencies":[{"name":"/home/s/repos/tree-shaking-example/package.json","includedInParent":true,"mtime":1539681810771},{"name":"/home/s/repos/tree-shaking-example/node_modules/ramda/package.json","includedInParent":true,"mtime":1539525658998},{"name":"./filter","loc":{"line":1,"column":19},"parent":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/partition.js","resolved":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/filter.js"},{"name":"./juxt","loc":{"line":2,"column":17},"parent":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/partition.js","resolved":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/juxt.js"},{"name":"./reject","loc":{"line":3,"column":19},"parent":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/partition.js","resolved":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/reject.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=u(require(\"./filter\")),r=u(require(\"./juxt\")),t=u(require(\"./reject\"));function u(e){return e&&e.__esModule?e:{default:e}}var d=(0,r.default)([e.default,t.default]),l=d;exports.default=l;","map":{"mappings":[{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":0}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":13}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":20}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":35}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":43}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":56}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":57}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":64}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":68}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":76}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":89}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":2,"column":0},"generated":{"line":1,"column":120}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":2,"column":0},"generated":{"line":1,"column":122}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":2,"column":0},"generated":{"line":1,"column":124}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":2,"column":0},"generated":{"line":1,"column":132}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":3,"column":0},"generated":{"line":1,"column":143}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":3,"column":0},"generated":{"line":1,"column":145}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":3,"column":0},"generated":{"line":1,"column":147}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":3,"column":0},"generated":{"line":1,"column":155}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":168}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":177}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":179}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":182}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":189}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":192}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":194}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":205}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":207}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":208}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":216}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":29,"column":0},"generated":{"line":1,"column":219}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":29,"column":4},"generated":{"line":1,"column":223}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":29,"column":29},"generated":{"line":1,"column":226}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":29,"column":34},"generated":{"line":1,"column":228}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":29,"column":34},"generated":{"line":1,"column":230}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":29,"column":34},"generated":{"line":1,"column":239}},{"source":"../node_modules/ramda/es/partition.js","name":"filter","original":{"line":29,"column":35},"generated":{"line":1,"column":240}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":29,"column":34},"generated":{"line":1,"column":242}},{"source":"../node_modules/ramda/es/partition.js","name":"reject","original":{"line":29,"column":43},"generated":{"line":1,"column":250}},{"source":"../node_modules/ramda/es/partition.js","original":{"line":29,"column":34},"generated":{"line":1,"column":252}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":262}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":264}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":266}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":274}},{"source":"../node_modules/ramda/es/partition.js","name":"partition","original":{"line":30,"column":15},"generated":{"line":1,"column":282}}],"sources":{"../node_modules/ramda/es/partition.js":"import filter from './filter';\nimport juxt from './juxt';\nimport reject from './reject';\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;"},"lineCount":null}},"hash":"2b49167df18cc658ff183c6340a11b89","cacheData":{"env":{}}}