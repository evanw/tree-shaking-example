{"id":"x/bk","dependencies":[{"name":"/home/s/repos/tree-shaking-example/package.json","includedInParent":true,"mtime":1539681810771},{"name":"/home/s/repos/tree-shaking-example/node_modules/ramda/package.json","includedInParent":true,"mtime":1539525658998},{"name":"./pipe","loc":{"line":1,"column":17},"parent":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/compose.js","resolved":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/pipe.js"},{"name":"./reverse","loc":{"line":2,"column":20},"parent":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/compose.js","resolved":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/reverse.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=u;var e=t(require(\"./pipe\")),r=t(require(\"./reverse\"));function t(e){return e&&e.__esModule?e:{default:e}}function u(){if(0===arguments.length)throw new Error(\"compose requires at least one argument\");return e.default.apply(this,(0,r.default)(arguments))}","map":{"mappings":[{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":0}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":13}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":20}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":35}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":43}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":56}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":57}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":64}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":68}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":76}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":84}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":1,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":1,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":1,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":1,"column":0},"generated":{"line":1,"column":94}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":1,"column":0},"generated":{"line":1,"column":102}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":2,"column":0},"generated":{"line":1,"column":113}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":2,"column":0},"generated":{"line":1,"column":115}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":2,"column":0},"generated":{"line":1,"column":117}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":2,"column":0},"generated":{"line":1,"column":125}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":139}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":148}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":150}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":153}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":160}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":163}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":165}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":176}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":178}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":179}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":33,"column":1},"generated":{"line":1,"column":187}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":28,"column":15},"generated":{"line":1,"column":190}},{"source":"../node_modules/ramda/es/compose.js","name":"compose","original":{"line":28,"column":24},"generated":{"line":1,"column":199}},{"source":"../node_modules/ramda/es/compose.js","name":"arguments","original":{"line":29,"column":6},"generated":{"line":1,"column":203}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":29,"column":27},"generated":{"line":1,"column":206}},{"source":"../node_modules/ramda/es/compose.js","name":"arguments","original":{"line":29,"column":6},"generated":{"line":1,"column":210}},{"source":"../node_modules/ramda/es/compose.js","name":"length","original":{"line":29,"column":16},"generated":{"line":1,"column":220}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":30,"column":10},"generated":{"line":1,"column":227}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":30,"column":10},"generated":{"line":1,"column":233}},{"source":"../node_modules/ramda/es/compose.js","name":"Error","original":{"line":30,"column":14},"generated":{"line":1,"column":237}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":30,"column":20},"generated":{"line":1,"column":243}},{"source":"../node_modules/ramda/es/compose.js","name":"pipe","original":{"line":32,"column":9},"generated":{"line":1,"column":285}},{"source":"../node_modules/ramda/es/compose.js","name":"pipe","original":{"line":32,"column":9},"generated":{"line":1,"column":292}},{"source":"../node_modules/ramda/es/compose.js","name":"apply","original":{"line":32,"column":14},"generated":{"line":1,"column":294}},{"source":"../node_modules/ramda/es/compose.js","name":"apply","original":{"line":32,"column":14},"generated":{"line":1,"column":302}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":32,"column":20},"generated":{"line":1,"column":308}},{"source":"../node_modules/ramda/es/compose.js","original":{"line":32,"column":26},"generated":{"line":1,"column":314}},{"source":"../node_modules/ramda/es/compose.js","name":"arguments","original":{"line":32,"column":34},"generated":{"line":1,"column":316}},{"source":"../node_modules/ramda/es/compose.js","name":"arguments","original":{"line":32,"column":34},"generated":{"line":1,"column":318}},{"source":"../node_modules/ramda/es/compose.js","name":"arguments","original":{"line":32,"column":34},"generated":{"line":1,"column":327}}],"sources":{"../node_modules/ramda/es/compose.js":"import pipe from './pipe';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}"},"lineCount":null}},"hash":"2a23003b288229198fd50b5ef25ea4b9","cacheData":{"env":{}}}