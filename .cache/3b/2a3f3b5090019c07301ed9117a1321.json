{"id":"/6z6","dependencies":[{"name":"/home/s/repos/tree-shaking-example/package.json","includedInParent":true,"mtime":1539681810771},{"name":"/home/s/repos/tree-shaking-example/node_modules/ramda/package.json","includedInParent":true,"mtime":1539525658998},{"name":"./composeK","loc":{"line":1,"column":21},"parent":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/pipeK.js","resolved":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/composeK.js"},{"name":"./reverse","loc":{"line":2,"column":20},"parent":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/pipeK.js","resolved":"/home/s/repos/tree-shaking-example/node_modules/ramda/es/reverse.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=u;var e=t(require(\"./composeK\")),r=t(require(\"./reverse\"));function t(e){return e&&e.__esModule?e:{default:e}}function u(){if(0===arguments.length)throw new Error(\"pipeK requires at least one argument\");return e.default.apply(this,(0,r.default)(arguments))}","map":{"mappings":[{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":0}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":13}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":20}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":35}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":43}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":56}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":57}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":64}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":68}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":76}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":84}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":1,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":1,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":1,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":1,"column":0},"generated":{"line":1,"column":94}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":1,"column":0},"generated":{"line":1,"column":102}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":2,"column":0},"generated":{"line":1,"column":117}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":2,"column":0},"generated":{"line":1,"column":119}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":2,"column":0},"generated":{"line":1,"column":121}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":2,"column":0},"generated":{"line":1,"column":129}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":143}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":152}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":154}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":157}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":164}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":167}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":169}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":180}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":182}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":183}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":1},"generated":{"line":1,"column":191}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":38,"column":15},"generated":{"line":1,"column":194}},{"source":"../node_modules/ramda/es/pipeK.js","name":"pipeK","original":{"line":38,"column":24},"generated":{"line":1,"column":203}},{"source":"../node_modules/ramda/es/pipeK.js","name":"arguments","original":{"line":39,"column":6},"generated":{"line":1,"column":207}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":39,"column":27},"generated":{"line":1,"column":210}},{"source":"../node_modules/ramda/es/pipeK.js","name":"arguments","original":{"line":39,"column":6},"generated":{"line":1,"column":214}},{"source":"../node_modules/ramda/es/pipeK.js","name":"length","original":{"line":39,"column":16},"generated":{"line":1,"column":224}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":40,"column":10},"generated":{"line":1,"column":231}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":40,"column":10},"generated":{"line":1,"column":237}},{"source":"../node_modules/ramda/es/pipeK.js","name":"Error","original":{"line":40,"column":14},"generated":{"line":1,"column":241}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":40,"column":20},"generated":{"line":1,"column":247}},{"source":"../node_modules/ramda/es/pipeK.js","name":"composeK","original":{"line":42,"column":9},"generated":{"line":1,"column":287}},{"source":"../node_modules/ramda/es/pipeK.js","name":"composeK","original":{"line":42,"column":9},"generated":{"line":1,"column":294}},{"source":"../node_modules/ramda/es/pipeK.js","name":"apply","original":{"line":42,"column":18},"generated":{"line":1,"column":296}},{"source":"../node_modules/ramda/es/pipeK.js","name":"apply","original":{"line":42,"column":18},"generated":{"line":1,"column":304}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":42,"column":24},"generated":{"line":1,"column":310}},{"source":"../node_modules/ramda/es/pipeK.js","original":{"line":42,"column":30},"generated":{"line":1,"column":316}},{"source":"../node_modules/ramda/es/pipeK.js","name":"arguments","original":{"line":42,"column":38},"generated":{"line":1,"column":318}},{"source":"../node_modules/ramda/es/pipeK.js","name":"arguments","original":{"line":42,"column":38},"generated":{"line":1,"column":320}},{"source":"../node_modules/ramda/es/pipeK.js","name":"arguments","original":{"line":42,"column":38},"generated":{"line":1,"column":329}}],"sources":{"../node_modules/ramda/es/pipeK.js":"import composeK from './composeK';\nimport reverse from './reverse';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}"},"lineCount":null}},"hash":"20522ae920a2119f8f9df136eddebd55","cacheData":{"env":{}}}